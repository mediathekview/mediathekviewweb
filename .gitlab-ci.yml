variables:
  DIST_IMAGE_LATEST: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  DIST_IMAGE_SHA: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  DIST_IMAGE_DOCKER_HUB: "mediathekview/mediathekviewweb:latest"
  DIST_IMAGE_DOCKER_HUB_DEVELOPMENT: "mediathekview/mediathekviewweb:development"

before_script:
  - mkdir -p /kaniko/.docker
  - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

stages:
  - build
  - publish

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  except:
    - schedules
  script:
    - /kaniko/executor --cache=true
      --context "$CI_PROJECT_DIR"
      --dockerfile "$CI_PROJECT_DIR/Containerfile"
      --destination "$DIST_IMAGE_SHA"
      --destination "$DIST_IMAGE_LATEST"
  tags:
    - gitlab-org-docker

publish:image:
  stage: publish
  when: manual
  image: alpine:3.22
  only:
    - master
  except:
    - schedules
  script:
    - apk add --no-cache skopeo
    - skopeo login --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - skopeo login --username "$DOCKER_HUB_USER" --password "$DOCKER_HUB_PASSWORD" "docker.io"
    - skopeo copy "docker://${DIST_IMAGE_SHA}" "docker://${DIST_IMAGE_DOCKER_HUB}"
  tags:
    - gitlab-org-docker

publish:image-development:
  stage: publish
  when: manual
  image: alpine:3.22
  only:
    - development
  except:
    - schedules
  script:
    - apk add --no-cache skopeo
    - skopeo login --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - skopeo login --username "$DOCKER_HUB_USER" --password "$DOCKER_HUB_PASSWORD" "docker.io"
    - skopeo copy "docker://${DIST_IMAGE_SHA}" "docker://${DIST_IMAGE_DOCKER_HUB_DEVELOPMENT}"
  tags:
    - gitlab-org-docker
